package com.example.math_gid.data;

import static java.util.Map.entry;

import java.util.Map;

public class ListsDataSource {
    private static Map<String, String> data = Map.ofEntries(entry("0", "Теорема Виета для приведённых квадратных уравнений «x2 + px + q = 0» гласит что справедливо следующее:\n" +
                    "x1 + x2 = −p\n" +
                    "x1 · x2 = q\n" +
                    ", где «x1» и «x2» — корни этого уравнения."),
            entry("1", "Первый закон Ньютона: если на тело не действуют никакие тела либо их действие взаимно уравновешено (скомпенсировано), то это тело будет находиться в состоянии покоя или двигаться равномерно и прямолинейно."),
            entry("2", "2"),
            entry("3", "3"),
            entry("4", "4"),
            entry("5", "5"),
            entry("6", "6"),
            entry("7", "7"),
            entry("8", "8"),
            entry("9", "9"),
            entry("10", "10"),
            entry("11", "11"),
            entry("12", "12"),
            entry("13", "13"),
            entry("14", "14"),
            entry("15", "15"),
            entry("16", "16"),
            entry("17", "17"),
            entry("18", "18"),
            entry("19", "19"),
            entry("20", "20"),
            entry("21", "21"),
            entry("22", "22"),
            entry("23", "23"),
            entry("24", "24"),
            entry("25", "25"),
            entry("26", "26"),
            entry("27", "27"),
            entry("28", "28"),
            entry("29", "29"),
            entry("30", "30"),
            entry("31", "31"),
            entry("32", "32"),
            entry("33", "33"),
            entry("34", "34"),
            entry("35", "35"),
            entry("36", "36"),
            entry("37", "37"),
            entry("38", "38"),
            entry("39", "39"),
            entry("40", "40"),
            entry("41", "41"),
            entry("42", "42"),
            entry("43", "43"),
            entry("44", "44"),
            entry("45", "45"),
            entry("46", "46"),
            entry("47", "47"),
            entry("48", "48"),
            entry("49", "49"),
            entry("50", "50"),
            entry("51", "51"),
            entry("52", "52"),
            entry("53", "53"),
            entry("54", "54"),
            entry("55", "55"),
            entry("56", "56"),
            entry("57", "57"),
            entry("58", "58"),
            entry("59", "59"),
            entry("60", "60"),
            entry("61", "61"),
            entry("62", "62"),
            entry("63", "63"),
            entry("64", "64"),
            entry("65", "65"),
            entry("66", "66"),
            entry("67", "67"),
            entry("68", "68"),
            entry("69", "69"),
            entry("70", "70"),
            entry("71", "71"),
            entry("72", "72"),
            entry("73", "73"),
            entry("74", "74"),
            entry("75", "75"),
            entry("76", "76"),
            entry("77", "77"),
            entry("78", "78"),
            entry("79", "79"),
            entry("80", "80"),
            entry("81", "81"),
            entry("82", "82"),
            entry("83", "83"),
            entry("84", "84"),
            entry("85", "85"),
            entry("86", "86"),
            entry("87", "87"),
            entry("88", "88"),
            entry("89", "89"),
            entry("90", "90"),
            entry("91", "91"),
            entry("92", "92"),
            entry("93", "93"),
            entry("94", "94"),
            entry("95", "95"),
            entry("96", "96"),
            entry("97", "97"),
            entry("98", "98"),
            entry("99", "99"),
            entry("100", "100"),
            entry("101", "101"),
            entry("102", "102"),
            entry("103", "103"),
            entry("104", "104"),
            entry("105", "105"),
            entry("106", "106"),
            entry("107", "107"),
            entry("108", "108"),
            entry("109", "109"),
            entry("110", "110"),
            entry("111", "111"),
            entry("112", "112"),
            entry("113", "113"),
            entry("114", "114"),
            entry("115", "115"),
            entry("116", "116"),
            entry("117", "117"),
            entry("118", "118"),
            entry("119", "119"),
            entry("120", "120"),
            entry("121", "121"),
            entry("122", "122"),
            entry("123", "123"),
            entry("124", "124"),
            entry("125", "125"),
            entry("126", "126"),
            entry("127", "127"),
            entry("128", "128"),
            entry("129", "129"),
            entry("130", "130"),
            entry("131", "131"),
            entry("132", "132"),
            entry("133", "133"),
            entry("134", "134"),
            entry("135", "135"),
            entry("136", "136"),
            entry("137", "137"),
            entry("138", "138"),
            entry("139", "139"),
            entry("140", "140"),
            entry("141", "141"),
            entry("142", "142"),
            entry("143", "143"),
            entry("144", "144"),
            entry("145", "145"),
            entry("146", "146"),
            entry("147", "147"),
            entry("148", "148"),
            entry("149", "149"),
            entry("150", "150"),
            entry("151", "151"),
            entry("152", "152"),
            entry("153", "153"),
            entry("154", "154"),
            entry("155", "155"),
            entry("156", "156"),
            entry("157", "157"),
            entry("158", "158"),
            entry("159", "159"),
            entry("160", "160"),
            entry("161", "161"),
            entry("162", "162"),
            entry("163", "163"),
            entry("164", "164"),
            entry("165", "165"),
            entry("166", "166"),
            entry("167", "167"),
            entry("168", "168"),
            entry("169", "169"),
            entry("170", "170"),
            entry("171", "171"),
            entry("172", "172"),
            entry("173", "173"),
            entry("174", "174"),
            entry("175", "175"),
            entry("176", "176"),
            entry("177", "177"),
            entry("178", "178"),
            entry("179", "179"),
            entry("180", "180"),
            entry("181", "181"),
            entry("182", "182"),
            entry("183", "183"),
            entry("184", "184"),
            entry("185", "185"),
            entry("186", "186"),
            entry("187", "187"),
            entry("188", "188"),
            entry("189", "189"),
            entry("190", "190"),
            entry("191", "191"),
            entry("192", "192"),
            entry("193", "193"),
            entry("194", "194"),
            entry("195", "195"),
            entry("196", "196"),
            entry("197", "197"),
            entry("198", "198"),
            entry("199", "199"));

    public String getData(String key) {
        return data.get(key);
    }
}
